/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NebulaFaucet,
  NebulaFaucetInterface,
} from "../../contracts/NebulaFaucet";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "originalAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "newAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "AmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Payed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "newState",
        type: "bool",
      },
    ],
    name: "StateToggled",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "deprecate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "receiver",
        type: "address",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newAmount",
        type: "uint256",
      },
    ],
    name: "updateAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052655af3107a400060015561002a61001f61004a60201b60201c565b61005260201b60201c565b6001600260006101000a81548160ff021916908315150217905550610116565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610c4c806101256000396000f3fe6080604052600436106100a05760003560e01c80633ccfd60b116100645780633ccfd60b14610168578063715018a61461017f5780638da5cb5b14610196578063d321fe29146101c1578063d37e5104146101ec578063f2fde38b14610203576100a7565b80630c11dedd146100a95780630fcc0c28146100d257806312065fe0146100e95780631865c57d1461011457806334d6093d1461013f576100a7565b366100a757005b005b3480156100b557600080fd5b506100d060048036038101906100cb91906107db565b61022c565b005b3480156100de57600080fd5b506100e7610391565b005b3480156100f557600080fd5b506100fe6103b9565b60405161010b9190610821565b60405180910390f35b34801561012057600080fd5b506101296103c1565b6040516101369190610857565b60405180910390f35b34801561014b57600080fd5b506101666004803603810190610161919061089e565b6103d8565b005b34801561017457600080fd5b5061017d61047c565b005b34801561018b57600080fd5b506101946104db565b005b3480156101a257600080fd5b506101ab6104ef565b6040516101b891906108ec565b60405180910390f35b3480156101cd57600080fd5b506101d6610518565b6040516101e39190610821565b60405180910390f35b3480156101f857600080fd5b50610201610522565b005b34801561020f57600080fd5b5061022a60048036038101906102259190610933565b6105ab565b005b600260009054906101000a900460ff1661027b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610272906109bd565b60405180910390fd5b6001546102866103b9565b10156102c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102be90610a29565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff1631905060015481101561038d576000816001546102fd9190610a78565b90508273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610345573d6000803e3d6000fd5b5042818473ffffffffffffffffffffffffffffffffffffffff167fc4afcd8d38f903c1c3c8ab41a84f6df29cb7fb88e0d7121bc9633c15eb94af8660405160405180910390a4505b5050565b61039961062e565b6103a16104ef565b73ffffffffffffffffffffffffffffffffffffffff16ff5b600047905090565b6000600260009054906101000a900460ff16905090565b6103e061062e565b60008111610423576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041a90610af8565b60405180910390fd5b60006001549050816001819055503373ffffffffffffffffffffffffffffffffffffffff16600154827f32598843ebd8872cccdb9c21be935270ca4d457ae763774808d1b802e33f123360405160405180910390a45050565b61048461062e565b61048c6104ef565b73ffffffffffffffffffffffffffffffffffffffff166108fc6104ad6103b9565b9081150290604051600060405180830381858888f193505050501580156104d8573d6000803e3d6000fd5b50565b6104e361062e565b6104ed60006106ac565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600154905090565b61052a61062e565b600260009054906101000a900460ff1615600260006101000a81548160ff021916908315150217905550600260009054906101000a900460ff1615153373ffffffffffffffffffffffffffffffffffffffff167f756dab92326c7665f3daa85a3340c845b6f4f0e1b22c4b75a15bce75ba7abe9a60405160405180910390a3565b6105b361062e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610622576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061990610b8a565b60405180910390fd5b61062b816106ac565b50565b610636610770565b73ffffffffffffffffffffffffffffffffffffffff166106546104ef565b73ffffffffffffffffffffffffffffffffffffffff16146106aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a190610bf6565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107a88261077d565b9050919050565b6107b88161079d565b81146107c357600080fd5b50565b6000813590506107d5816107af565b92915050565b6000602082840312156107f1576107f0610778565b5b60006107ff848285016107c6565b91505092915050565b6000819050919050565b61081b81610808565b82525050565b60006020820190506108366000830184610812565b92915050565b60008115159050919050565b6108518161083c565b82525050565b600060208201905061086c6000830184610848565b92915050565b61087b81610808565b811461088657600080fd5b50565b60008135905061089881610872565b92915050565b6000602082840312156108b4576108b3610778565b5b60006108c284828501610889565b91505092915050565b60006108d68261077d565b9050919050565b6108e6816108cb565b82525050565b600060208201905061090160008301846108dd565b92915050565b610910816108cb565b811461091b57600080fd5b50565b60008135905061092d81610907565b92915050565b60006020828403121561094957610948610778565b5b60006109578482850161091e565b91505092915050565b600082825260208201905092915050565b7f506f575365637572653a20436f6e747261637420697320506175736564000000600082015250565b60006109a7601d83610960565b91506109b282610971565b602082019050919050565b600060208201905081810360008301526109d68161099a565b9050919050565b7f506f575365637572653a20436f6e747261637420456d70747900000000000000600082015250565b6000610a13601983610960565b9150610a1e826109dd565b602082019050919050565b60006020820190508181036000830152610a4281610a06565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a8382610808565b9150610a8e83610808565b9250828203905081811115610aa657610aa5610a49565b5b92915050565b7f506f775365637572653a20496e76616c696420416d6f756e7400000000000000600082015250565b6000610ae2601983610960565b9150610aed82610aac565b602082019050919050565b60006020820190508181036000830152610b1181610ad5565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610b74602683610960565b9150610b7f82610b18565b604082019050919050565b60006020820190508181036000830152610ba381610b67565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610be0602083610960565b9150610beb82610baa565b602082019050919050565b60006020820190508181036000830152610c0f81610bd3565b905091905056fea264697066735822122058012c065f5d3966af9a35d5b2a038c700a0d3f82dee7eb8da10a4ccc542a7ea64736f6c63430008120033";

type NebulaFaucetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NebulaFaucetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NebulaFaucet__factory extends ContractFactory {
  constructor(...args: NebulaFaucetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<NebulaFaucet> {
    return super.deploy(overrides || {}) as Promise<NebulaFaucet>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NebulaFaucet {
    return super.attach(address) as NebulaFaucet;
  }
  override connect(signer: Signer): NebulaFaucet__factory {
    return super.connect(signer) as NebulaFaucet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NebulaFaucetInterface {
    return new utils.Interface(_abi) as NebulaFaucetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NebulaFaucet {
    return new Contract(address, _abi, signerOrProvider) as NebulaFaucet;
  }
}
